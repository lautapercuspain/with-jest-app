import React from 'react';
import { render, cleanup, fireEvent, screen, waitFor } from '@testing-library/react';
import '@testing-library/jest-dom';
import Hero from './Hero';

afterEach(cleanup);

describe('Hero', () => {
  const mockImages = ['image1.png', 'image2.png', 'image3.png'];
  const mockTitle = 'Title';
  const mockSubtitle = 'Subtitle';
  const mockProps = { title: mockTitle, subtitle: mockSubtitle, images: mockImages };

  test('renders correctly', async () => {
    render(<Hero {...mockProps} />);

    const displayedImage = screen.getByRole('img');
    expect(displayedImage).toHaveAttribute('src', mockImages[0]);

    const title = await waitFor(() => screen.getByText(mockTitle));
    expect(title).toBeInTheDocument();

    const subtitle = await waitFor(() => screen.getByText(mockSubtitle));
    expect(subtitle).toBeInTheDocument();
  });

  test('navigates to next image', async () => {
    render(<Hero {...mockProps} />);

    fireEvent.click(screen.getByText('Next'));

    await waitFor(() => {
      const displayedImage = screen.getByRole('img');
      expect(displayedImage).toHaveAttribute('src', mockImages[1]);
    });
  });

  test('navigates to previous image', async () => {
    render(<Hero {...mockProps} />);

    fireEvent.click(screen.getByText('Previous'));

    await waitFor(() => {
      const displayedImage = screen.getByRole('img');
      expect(displayedImage).toHaveAttribute('src', mockImages[2]);
    });
  });
});