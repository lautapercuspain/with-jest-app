import React from 'react';
import { render, fireEvent } from '@testing-library/react';
import Dropdown from './Dropdown';

test('renders Dropdown component with given props', () => {
  const options = [
    { value: 'option1', label: 'Option 1' },
    { value: 'option2', label: 'Option 2' },
    { value: 'option3', label: 'Option 3' },
  ];
  const value = 'option2';
  const onChange = jest.fn();
  const label = 'Select Option';

  const { getByText, getByLabelText } = render(
    <Dropdown options={options} value={value} onChange={onChange} label={label} />
  );

  expect(getByText(label)).toBeInTheDocument();
  expect(getByLabelText(label)).toHaveValue(value);
});

test('onChange event calls correctly when selecting an option', () => {
  const options = [
    { value: 'option1', label: 'Option 1' },
    { value: 'option2', label: 'Option 2' },
    { value: 'option3', label: 'Option 3' },
  ];
  const value = 'option2';
  const onChange = jest.fn();
  const label = 'Select Option';

  const { getByLabelText } = render(
    <Dropdown options={options} value={value} onChange={onChange} label={label} />
  );

  fireEvent.change(getByLabelText(label), { target: { value: 'option3' } });

  expect(onChange).toHaveBeenCalledTimes(1);
  expect(onChange).toHaveBeenCalledWith('option3');
});

test('renders options correctly with given props', () => {
  const options = [
    { value: 'option1', label: 'Option 1' },
    { value: 'option2', label: 'Option 2' },
    { value: 'option3', label: 'Option 3' },
  ];
  const value = 'option2';
  const onChange = jest.fn();
  const label = 'Select Option';

  const { getByText } = render(
    <Dropdown options={options} value={value} onChange={onChange} label={label} />
  );

  options.forEach(option => {
    expect(getByText(option.label)).toBeInTheDocument();
  });
});