Here is a test case to ensure that the HeroComponent renders correctly with given props.

```ts
import React from 'react';
import { render, screen, cleanup, waitFor } from '@testing-library/react';
import '@testing-library/jest-dom';
import HeroComponent from './HeroComponent';

describe('HeroComponent', () => {
  afterEach(() => {
    cleanup();
  });

  it('renders HeroComponent successfully', async () => {
    const mockProps = {
      image: 'hero-image.jpg',
      title: 'Hero Title',
      description: 'Hero description',
    };

    render(<HeroComponent {...mockProps} />);

    await waitFor(() => {
      expect(screen.getByRole('heading', { name: /hero title/i })).toBeInTheDocument();
      expect(screen.getByRole('img', { name: /hero image/i })).toBeInTheDocument();
      expect(screen.getByText(/hero description/i)).toBeInTheDocument();
    });
  });
});
```
This test will check if the HeroComponent is rendered correctly with the title, image, and description found on the screen.
Please ensure that the component props match the mock props in the test case for it to pass successfully.
